name: build-project

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-ui: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Install dependencies
      run: npm install
      working-directory: ui

    - name: Write version to file
      run: node git-version.js
      working-directory: ui

    - name: Build
      run: npm run build:core
      working-directory: ui

    - name: Save angular artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ui-artifacts
        path: |
          ui/dist/learninghouse
    
  build-core:
    runs-on: ubuntu-latest
    needs: build-ui
    strategy:
      matrix:
        python-version:
          - '3.7'
          - '3.9'
          - '3.10'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Integrate UI
      uses: actions/download-artifact@v3
      with:
        name: ui-artifacts
        path: core/learninghouse/ui

    - name: Install build package
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build
      working-directory: core

    - name: Save python artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-artifacts-${{ matrix.python-version }}
        path: |
          core/dist

  build-docker:
    runs-on: ubuntu-latest
    needs: build-core
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Load learninghouse wheel
      uses: actions/download-artifact@v3
      with:
        name: python.artificats-3.10
        path: docker/container

    - name: Copy requirements.txt for core
      run: cp core/requirements.txt docker/container/
  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: docker
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

      